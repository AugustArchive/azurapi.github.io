# Ship Information
<aside class="precaution">Some Discord servers may consider certain skins as NSFW. If you are developing a bot for a specific server, Do discuss how the command should be implemented before designing</aside>
This section contain the Functions and Results developers should get when calling a ship related function. The names of the relevant ships implemented in game are provided in the resultant JSON on the right. But, Developers should able to provide their own error checking for misspelt names and other user centric input checks prior to checking the library for the statistics

## Resulting Information
> The Resultant JSON is structured like this:

```json
{
  "wikiUrl": "String",
  "id": "String",
  "names": { "code": "String","en": "String", "code": "String", "cn": "String", "jp": "String", "kr": "String" },
  "class": "String",
  "nationality": "String",
  "hullType": "String",
  "thumbnail": "String",
  "rarity": "String",
  "stars": { "stars": "String", "value": "Number" },
  "stats": {
    "level120": "Refer to object format for Stats",
    "level100": "Refer to object format for Stats",
    "baseStats": "Refer to object format for Stats",
    "level100Retrofit": "Refer to object format for Stats",
    "level120Retrofit": "Refer to object format for Stats"
  },
  "slots": {
    1: "Refer to Slot Table",
    2: "Refer to Slot Table",
    3: "Refer to Slot Table"
  },
  "enhanceValue": { "firepower": "Number", "torpedo": "Number", "aviation": "Number", "reload": "Number" },
  "scrapValue": { "coin": "Number", "oil": "Number", "medal": "Number" },
  "skills": [
    "Refer to object format for Skill"
    /* Same Format for the Rest of the Skills */
  ],

  "limitBreaks": [
    /* Each Limit Break will have an array of upgrade stats,
    first layer = breaks, second layer = bonus */
  ],
  "fleetTech": {
    "statsBonus": { "collection": [Object], "maxLevel": [Object] },
    "techPoints": { "collection": 14, "maxLimitBreak": 28, "maxLevel": 21, "total": 63 }
  },
  "construction": {
    "constructionTime": "String",
    "availableIn": { "light": "Boolean", "heavy": "Boolean", "aviation": "Boolean", "limited": "Boolean", "exchange": "Boolean" }
  },
  "gallery": [
    /* Array of Gallery Images in the following Format */
    { "description": "String", "url": "String" }
  ],
  "misc": {
    "artist": "String",
    "web": "Refer to object format for Artist",
    "pixiv": "Refer to object format for Artist",
    "twitter": "Refer to object format for Artist",
    "voice": "Refer to object format for Artist"
  },
  "skins": [
    { "name": "String", "image": "String", "background": "String", "chibi": "String", "info": [Object] }
    /* Same Format for the rest of the skins */
  ]
}
```

###Object Format for Artist

<div class="center-column"></div>

```json
{
    "name": "String",
    "url": "String"
}
```


###Object Format for Slot

<div class="center-column"></div>

```json
{
    "type": "String",
    "minEfficiency": "Number",
    "maxEfficiency": "Number"
}
```

###Object Format for Stats

<div class="center-column"></div>

```json
{
    "health": "String",
    "armor": "String",
    "reload": "String",
    "luck": "String",
    "firepower": "String",
    "torpedo": "String",
    "evasion": "String",
    "speed": "String",
    "antiair": "String",
    "aviation": "String",
    "oilConsumption": "String",
    "accuracy": "String",
    "antisubmarineWarfare": "String",

    <!-- For Submarines -->
    "oxygen": "String",
    "ammunition": "String",
    "huntingRange": "String"
}
```
###Object Format for Skill

<div class="center-column"></div>

```json
{
    "icon": "String",
    "names": {
      "en": "string",
      "cn": "string",
      "jp": "string",
      "kr": "string"
    }
    "description": "string",
    "color": "string"
}
```

## Ship Query By Name

```javascript
import { getShipsByEnglishName } from '@azurapi/azurapi' //ES6
//const { getShipsByEnglishName } = require('@azurapi/azurapi') ES5
console.log(getShipsByEnglishName('z23'))
```
```python
api.getShipByNameEn(ship="Enterprise")
```
```kotlin
/* Use methods from Atago class */
Atago.getShipByName("atago")
```
This Table allows you to configure the type of language as a point of reference in name detection
<aside class="notice">Note that only Multifunction can support Both Query by ID and Multilingual Functions</aside>

| Type          | Main Method           | Alternative  Method   |
| ------------- | --------------------- | --------------------- |
| Multifunction | getShip               |                       |
| Multilingual  | getShipByName         |                       |
| English       | getShipByEnglishName  | getShipByNameEn       |
| Japanese      | getShipByJapaneseName | getShipByNameKr       |
| Chinese       | getShipByChineseName  | getShipByNameJp       |
| Korean        | getShipByKoreanName   | getShipByNameCn       |


## Ship Query By ID

```javascript
import { getShipById } from '@azurapi/azurapi' //ES6
//const { getShipById } = require('@azurapi/azurapi') ES5
console.log(getShipById('001'))
```
```python
api.getShip(ship=115)
api.getShip(ship="115")
# or
# sid stands for "ship id" since id is a reserved function name in Python
api.getShipById(sid=115)
api.getShipById(sid="115")
```
```kotlin
/* Use methods from Atago class */
Atago.getShipById("atago")
```
There are 2 Options avaliable for querying By ID
<aside class="notice">Note that only Multifunction can support Both Query by ID and Multilingual Functions</aside>

| Type          | Methods               |
| ------------- | --------------------- |
| Multifunction | getShip               |
| ID Only       | getShipById           |
